@model LaptopSystem.Models.Laptop

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Laptop</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="control-group">
            @Html.LabelFor(model => model.Model, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Model)
                @Html.ValidationMessageFor(model => model.Model, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Inches, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Inches)
                @Html.ValidationMessageFor(model => model.Inches, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Harddisk, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Harddisk)
                @Html.ValidationMessageFor(model => model.Harddisk, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Ram, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Ram)
                @Html.ValidationMessageFor(model => model.Ram, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Image)
                @Html.ValidationMessageFor(model => model.Image, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.AdditionalParts, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.AdditionalParts)
                @Html.ValidationMessageFor(model => model.AdditionalParts, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

