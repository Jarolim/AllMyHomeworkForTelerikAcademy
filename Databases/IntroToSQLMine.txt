--01. What is SQL? What is DML? What is DDL? Recite the most important SQL commands.

Structured query language for query and manipulation of relational data. SQL consists of:
- Data Manipulation Language (DML) - SELECT, INSERT, UPDATE, DELETE 
- Data Definition Language (DDL) - CREATE, DROP, ALTER, GRANT, REVOKE

--------------------------------------------------------------------------------------

--02. What is Transact-SQL (T-SQL)?

Transact SQL is an extension to the standart SQL language. It supports if statements,
 loops and exceptions. It`s used for writing procedures, functions, triggers etc.

--------------------------------------------------------------------------------------

--03. Start SQL Management Studio and connect to the database TelerikAcademy. 
Examine the major tables in the "TelerikAcademy" database.

:-)

--------------------------------------------------------------------------------------

--04. Write a SQL query to find all information about all departments.

SELECT * FROM Departments

--------------------------------------------------------------------------------------

--05. Write a SQL query to find all department names.

SELECT Name FROM Departments

--------------------------------------------------------------------------------------

--06. Write a SQL query to find the salary of each employee.

SELECT Firstname, Lastname, Salary FROM Employees

--------------------------------------------------------------------------------------

--07.Write a SQL to find the full name of each employee.

SELECT Firstname + ' ' + Lastname AS FullName FROM Employees

--------------------------------------------------------------------------------------

--08.Write a SQL query to find the email addresses 
--of each employee (by his first and last name). 
--Consider that the mail domain is telerik.com. 
--Emails should look like “John.Doe@telerik.com". 
--The produced column should be named "Full Email Addresses".

SELECT Firstname + '.' + Lastname + '@telerik.com' AS [Full Email Addresses] FROM Employees

--------------------------------------------------------------------------------------

--09.Write a SQL query to find all different employee salaries.

1)SELECT DISTINCT Salary FROM Employees

2)SELECT Salary AS [Unique Salaries]  
FROM Employees
INTERSECT 
SELECT Salary 
FROM Employees
ORDER BY [Unique Salaries]

--------------------------------------------------------------------------------------

--10. Write a SQL query to find all 
--information about the employees whose job 
--title is “Sales Representative“.

SELECT * FROM Employees
WHERE JobTitle = 'Sales Representative'

--------------------------------------------------------------------------------------

--11.Write a SQL query to find the names 
--of all employees whose first name starts with "SA".

SELECT FirstName+' '+LastName AS FullName FROM Employees
WHERE FirstName LIKE 'SA%'

--------------------------------------------------------------------------------------

--12. Write a SQL query to find the names of 
--all employees whose last name contains "ei".

SELECT FirstName+' '+LastName AS FullName FROM Employees
WHERE LastName LIKE '%ei%'

--------------------------------------------------------------------------------------

--13. Write a SQL query to find the salary 
--of all employees whose salary is 
--in the range [20000…30000].

SELECT Firstname, Lastname, Salary FROM Employees
WHERE Salary BETWEEN 20000 AND 30000

--------------------------------------------------------------------------------------

--14. Write a SQL query to find the names 
--of all employees whose salary is 25000, 14000, 12500 or 23600.

SELECT FirstName, LastName, Salary FROM Employees
WHERE Salary IN(25000,14000,12500,23600)

--------------------------------------------------------------------------------------

--15. Write a SQL query to find all employees that 
--do not have manager.

SSELECT Firstname, Lastname, ManagerID FROM Employees
WHERE ManagerID is NULL

--------------------------------------------------------------------------------------

--16. Write a SQL query to find all employees that 
--have salary more than 50000. Order them in 
--decreasing order by salary.

SELECT Firstname, Lastname, Salary FROM Employees
WHERE Salary>50000
ORDER BY Salary DESC

--------------------------------------------------------------------------------------

--17. Write a SQL query to find the top 5 
--best paid employees.

SELECT TOP 5 Salary, Firstname, Lastname FROM Employees
ORDER BY Salary DESC

--------------------------------------------------------------------------------------

--18.Write a SQL query to find all 
--employees along with their address. 
--Use inner join with ON clause.

SELECT e.FirstName, e.LastName, a.AddressText AS [Employee Adresses]
FROM Employees e INNER JOIN Addresses a
ON e.AddressID = a.AddressID

--------------------------------------------------------------------------------------

--19.Write a SQL query to find all employees 
--and their address. Use equijoins (conditions in 
--the WHERE clause).

SELECT e.FirstName, e.LastName, a.AddressText AS [Employee Adresses]
FROM Employees e, Addresses a
WHERE e.AddressID = a.AddressID

--------------------------------------------------------------------------------------

--20.Write a SQL query to find all employees along with their manager.

SELECT e.FirstName, e.LastName, m.FirstName + ' '  +m.LastName AS [Managers Name]
FROM Employees e INNER JOIN Employees m
ON e.ManagerID = m.EmployeeID

--------------------------------------------------------------------------------------

--21.Write a SQL query to find all employees, 
--along with their manager and their address. 
--Join the 3 tables: Employees e, Employees m and 
--Addresses a.

SELECT
  e.FirstName +' '+e.LastName AS EmployeeName,
  m.FirstName +' '+m.LastName AS ManagerName,
  a.AddressText AS ManagerAddress
FROM Employees e INNER JOIN (Employees m INNER JOIN Addresses a 
ON m.AddressID=a.AddressID)
  ON e.ManagerID = m.EmployeeID

--------------------------------------------------------------------------------------

--22.Write a SQL query to find all departments 
--and all region names, country names and 
--city names as a single list. Use UNION.

SELECT Name AS AllNames FROM Departments
UNION
SELECT Name AS AllNames FROM Towns
UNION
SELECT Name AS AllNames FROM Projects

--------------------------------------------------------------------------------------

--23. Write a SQL query to find all the employees 
--and the manager for each of them along with the 
--employees that do not have manager. User right outer join. 
--Rewrite the query to use left outer join.
 
SELECT e.LastName AS [Employee], m.LastName AS [Manager]
FROM Employees e LEFT OUTER JOIN Employees m
	ON e.ManagerID = m.EmployeeID
 
SELECT e.LastName AS [Employee], m.LastName AS [Manager]
FROM Employees m RIGHT OUTER JOIN Employees e
	ON e.ManagerID = m.EmployeeID

--------------------------------------------------------------------------------------

--24. Write a SQL query to find the names of all employees 
--from the departments "Sales" and "Finance" whose 
--hire year is between 1995 and 2000.

SELECT e.FirstName +' '+e.LastName AS [Emplyee Name],
		d.Name DepartmantName,e.HireDate
FROM Employees e INNER JOIN Departments d
ON e.DepartmentID = d.DepartmentID
WHERE d.Name IN ('Sales','Finance') AND
e.HireDate BETWEEN '1/1/1995' AND '12/31/2005'