<?xml version="1.0"?>

<configuration>

  <system.web>
    <authorization>
      <deny users="?"/>
    </authorization>
  </system.web>

</configuration>

return new List<Criteria>
{
  // Kriterii bez opcii izpolzvame za title (6te go napravim po-umno kato imame vreme)
 
  new Criteria("Problem 1. Library System Data Layer", "", new List<Option>()),
  new Criteria("The database is correctly designed: Tables", 
    "We have tables for the categories and books (one-to-many). Category name is mandatory, book title, author and category is mandatory. All other fields are optional. Book description is long text field (e.g. ntext). Category name may be unique or not (both are considered correct). Authors could be stored in the books table or in separate table (both are correct).", new List<Option>
    {
      new Option("Correct (4)", 4),
      new Option("Almost Correct (3)", 3),
      new Option("Partially Correct (2)", 2),
      new Option("Mostly Incorrect (1)", 1),
      new Option("Missing (0)", 0),
    }),
  new Criteria("The database is correctly designed: ASP.NET Identity", 
    "We have tables for the users / passwords / etc.", new List<Option>
    {                        
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Copy / paste deployment", 
    "The application runs with LocalDB and starts correctly without a need of installation / configuration / change. Typically when you click [Ctrl+F5] the application should run corectly. If the database is not supplied as part of the project (there are no .mdf + .ldf files in the project archive), it should be created on demand.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
 
 
  new Criteria("Problem 2. Library System Web Forms App", "", new List<Option>()),
  
  new Criteria("Common Features", "", new List<Option>()),
  new Criteria("Master Page",
    "The project have master page holding the site header + footer + navigation (menu) + login / logout / register links", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("ASP.NET Identity",
    "The ASP.NET Identity system (or ASP.NET membership) is correctly configured. If the login / logout works, this is considered done.", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Register User",
    "User registration works correctly. Users can register. In case of duplicated username / incorect data, an error message is shown (not a crash screen). After registration, the registered user is stored in the database.", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Login",
    "User login works correctly. In case of incorect login, an error message is shown (not a crash screen).", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Authorization (unauthorized access is not permitted)",
    "The pages Admin/EditCategory.aspx and Admin/EditBooks canot be accessed annonymously. If there is no logged-in user, these pages should redirect to the login form.", new List<Option>
    {
      new Option("Yes (2)", 3),
      new Option("Almost Yes (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Logout",
    "User login works correctly. In case of incorect login, an error message is shown (not a crash screen).", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
    
  new Criteria("Public Area", "", new List<Option>()),
  new Criteria("Display categories and books",
    "All categories and the books in each category are shown at the start page of the application. The title and author are shown for each book. HTML escaping is done correctly (put <br/> in the database in all possible fields to test it).", new List<Option>
    {
      new Option("Yes (5)", 5),
      new Option("Almost Yes (4)", 4),
      new Option("Partially (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("View book details",
    "Clicking on a book from the start page displays the book details (title, author, ISBN, web site and description) in a separate page. HTML escaping is done correctly (put <br/> in the database in all possible fields to test it). Missing fields can be visualized in several ways, e.g. just skip them or display ISBN: (none)", new List<Option>
    {
      new Option("Yes (5)", 5),
      new Option("Almost Yes (4)", 4),
      new Option("Partially (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Search: search box",
    "A search box is available at the start page and clicking on it opens a new page and passes the search arguments to it.", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Search: matching",
    "Search results page works corectly. It matches all the books by the passed search phrase. Matching is done by substring matching (by title, author or both). Both case-sensitive and case-insensitive mathings are considered correct.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
  
  new Criteria("Search: results",
    "Search results should include the book title, author and category. Each book entry should have a link to the book details page.", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Search: empty search",
    "Search by empty string matches all available books.", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Search: sorting",
    "Search results are sorted alphabetically (by title as first criteria and by author as second criteria).", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Search: too long query",
    "In case of too long query (e.g. 20000 characters) the search box shows an error (does not crash).", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
    
    
  new Criteria("Administration Area - Edit Categories", "", new List<Option>()),
  new Criteria("Categories Table",
    "Categories are listed in a table with [Edit] and [Delete] button for each category", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Categories Table Sorting",
    "Categories table is sortable (by category name)", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Categories Table Paging",
    "Categories table is pageable (page size = 5)", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Create Category Form",
    "Create category form works correctly. When the [Create New] button is clicked the create category form is shown. It displays a new empty category form. The [Create] button creates the new category or shows an error message in case of a problem. The [Cancel] button hides the form and shows back the categories table. Duplicated categories may be allowed or not (both cases are considered correct). The form can be on the same page or on another page.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),    
  new Criteria("Edit Category Form",
    "Edit category form works correctly. When the [Edit] button is clicked the edit category form is shown. It displays the currently selected category from the categories table. The [Save] button modifies the category in the database or shows an error message in case of a problem. The [Cancel] button hides the form and shows back the categories table. Duplicated categories may be allowed or not (both cases are considered correct). The form can be on the same page or on another page.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),    
  new Criteria("Delete Category Form",
    "Delete category form works correctly. When the [Delete] button is clicked the delete category form is shown. It asks for delete confirmation. The [Yes] button deletes the category from the database or shows an error message in case of a problem. The form can be shown on the same page or on another page. In case of JavaScript confirm() dialog give 3 points. In case of no delete confirmation, give 2 points.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Delete non-empty category",
    "Deleting a non-empty category deletes all books inside it.", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
   new Criteria("HTML escaping",
    "HTML special characters are escaped correctly everywhere in the page (check with <br/> in all possible fields", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  
  
  new Criteria("Administration Area - Edit Books", "", new List<Option>()),
  new Criteria("Books Table",
    "Books are listed in a table with [Edit] and [Delete] buttons for each book. For each book display the following columns: Title, Author, ISBN, Web Site, Category", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Books Table: cut long values",
    "Long values (more than 20 characters) in all columns should be cut to 20 characters (ending with ...)", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Partially (2)", 2),
      new Option("No (0)", 0),
    }),
  new Criteria("Books Table Sorting",
    "Books table is sortable (by all columns, including by category)", new List<Option>
    {
      new Option("Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Books Table Paging",
    "Books table is pageable (page size = 5)", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Server-Side Table Paging",
    "Check whether the paging is done server-side. Use SQL Profiler to see the SQL queries executed at page change. It should only get the rows to be displayed (single SELECT with WHERE).", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Books Table: N+1 Query Problem",
    "Check for N+1 query problem. Use SQL Profiler to see the SQL queries executed when the books table is shown. It should perform only one query that joins the books with the categories.", new List<Option>
    {
      new Option("Yes (1)", 1),
      new Option("No (0)", 0),
    }),
  new Criteria("Create Book Form",
    "Create book form works correctly. When the [Create New] button is clicked the create book form is shown. It displays a new empty book form. The category should be choosable through a drop-down list (combo box). The [Create] button creates the new book or shows an error message in case of a problem. The [Cancel] button hides the form and shows back the books table. The form can be located on the same page or on another page.", new List<Option>
    {
      new Option("Yes (6)", 6),
      new Option("Almost Yes (5)", 5),
      new Option("Partially (4)", 4),
      new Option("Partially (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),    
  new Criteria("Edit Book Form",
    "Edit book form works correctly. When the [Edit] button is clicked the edit book form is shown. It displays the currently selected book from the books table. The category should be choosable through a drop-down list (combo box). The [Save] button modifies the book in the database or shows an error message in case of a problem. The [Cancel] button hides the form and shows back the books table. The form can be on the same page or on another page.", new List<Option>
    {
      new Option("Yes (6)", 6),
      new Option("Almost Yes (5)", 5),
      new Option("Partially (4)", 4),
      new Option("Partially (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),    
  new Criteria("Delete Book Form",
    "Delete book form works correctly. When the [Delete] button is clicked the delete book form is shown. It asks for delete confirmation. The [Yes] button deletes the book from the database or shows an error message in case of a problem. The form can be shown on the same page or on another page. In case of JavaScript confirm() dialog give 3 points. In case of no delete confirmation, give 2 points.", new List<Option>
    {
      new Option("Yes (4)", 4),
      new Option("Almost Yes (3)", 3),
      new Option("Partially (2)", 2),
      new Option("Almost No (1)", 1),
      new Option("No (0)", 0),
    }),
   new Criteria("HTML escaping",
    "HTML special characters are escaped correctly everywhere in the page (check with <br/> in all possible fields", new List<Option>
    {
      new Option("Yes (2)", 2),
      new Option("Partially (1)", 1),
      new Option("No (0)", 0),
    }),
    
    
  new Criteria("Error Handling", "", new List<Option>()),
  new Criteria("Error handling is done well",
    "Good error handling shows errors instead of crashes. Try to put very long values in the category / book edit forms, e.g. 20000 characters. Does the application display a correct error message? What happens if you put <br/>? Is it displayed correctly? What happens if a required fields is left empty?", new List<Option>
    {
      new Option("Excellent error handling (5)", 5),
      new Option("Almost excellent error handling (4)", 4),
      new Option("Partial error handling (3)", 3),
      new Option("Partial error handling (2)", 2),
      new Option("Almost no error handling (1)", 1),
      new Option("No error handling (0)", 0),
    }),
  
  
  new Criteria("User Interface", "", new List<Option>()),
  new Criteria("User interface (UI)",
    "The user interface is intuitive, looks nice and is easy-to-use. Rate it.", new List<Option>
    {
      new Option("Excellent (5)", 5),
      new Option("Good (4)", 4),
      new Option("Acceptable (3)", 3),
      new Option("Not good (2)", 2),
      new Option("Bad (1)", 1),
      new Option("Terrible (0)", 0),
    }),    
};